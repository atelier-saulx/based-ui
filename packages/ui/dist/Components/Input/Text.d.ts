import React, { CSSProperties, FunctionComponent, FocusEvent } from 'react';
import { Color } from '@based/theme';
import { IconName } from '@based/icons';
import { Validator } from './validators';
import { DropdownOption } from '../Overlay/Dropdown';
import { TextValue } from '@based/text';
import { OnValueChange } from '../../types';
import './style.css';
declare type InputProps = {
    inputRef?: any;
    style?: CSSProperties;
    weight?: 'semibold' | 'medium' | 'regular';
    icon?: IconName;
    errorText?: TextValue;
    helperText?: TextValue;
    noBorder?: boolean;
    noHover?: boolean;
    noBackground?: boolean;
    border?: boolean;
    iconColor?: Color;
    name?: string;
    autoFocus?: boolean;
    onChange: OnValueChange<string | number | undefined>;
    onFocus?: (event: FocusEvent<any>) => void;
    onBlur?: (event: FocusEvent<any>) => void;
    onKeyUp?: (event: React.KeyboardEvent<HTMLInputElement>) => void;
    type?: 'text' | 'email' | 'number' | 'date' | 'time' | 'search' | 'password';
    validator?: Validator;
    onValid?: (valid: boolean) => {};
    identifier?: any;
    value?: string | number;
    placeholder?: TextValue;
    dropdown?: DropdownOption[];
    color?: Color;
    noClear?: boolean;
    noBordeRadius?: boolean;
    progress?: number;
    autoComplete?: string;
};
export declare const Input: FunctionComponent<InputProps>;
export {};
